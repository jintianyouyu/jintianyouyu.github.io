<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>yakit-单兵作战武器库</title>
      <link href="/2022/07/22/yakit-%E5%8D%95%E5%85%B5%E4%BD%9C%E6%88%98%E6%AD%A6%E5%99%A8%E5%BA%93/"/>
      <url>/2022/07/22/yakit-%E5%8D%95%E5%85%B5%E4%BD%9C%E6%88%98%E6%AD%A6%E5%99%A8%E5%BA%93/</url>
      
        <content type="html"><![CDATA[<ul><li>站在前人的肩膀上，先给出官方链接：<a href="https://github.com/yaklang/yakit">https://github.com/yaklang/yakit</a></li></ul><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><ul><li><p>写在最前面，技术小白刚入门，不敢过多评价，简单记录工具使用的体验，在使用重有个指导与参考，如有不对的海涵</p><ul><li><p>工具刚刚起步，内部还是有些小问题，如扫描记录显示不全</p></li><li><p>各个模块之间的协同能力欠缺，或者说被动扫描欠缺，需要手动去操作，半自动或者自动化检测能力需要提高</p><p>《就这些》</p></li></ul></li><li><p>这个工具官方给出的指导手册与安装方式相当详细，这里也不用再多赘述，大家按照流程正常安装使用即可。</p><ul><li>想看详细的工具介绍直接移步yakit 官网，这里只是自己的部分记录，并不全面</li></ul></li><li><p>打造 yakit 这款工具的团队雄心壮志，将持续关注</p><ul><li>引用工具介绍的一句话：<code>akit是基于Yak语言开发的网络安全单兵工具，旨在打造一个覆盖渗透测试全流程的网络安全工具库</code></li></ul></li></ul><h2 id="工具下载安装"><a href="#工具下载安装" class="headerlink" title="工具下载安装"></a>工具下载安装</h2><ul><li><p>通过 GitHub 地址下载：<a href="https://github.com/yaklang/yakit/releases">https://github.com/yaklang/yakit/releases</a></p></li><li><p>此处安装在Windows中，双击安装，不让选择路径，程序自动指定路径。</p></li></ul><p><img src="/2022/07/22/yakit-%E5%8D%95%E5%85%B5%E4%BD%9C%E6%88%98%E6%AD%A6%E5%99%A8%E5%BA%93/image-20220722165911292.png"></p><ul><li><p>安装完成后开始进行配置操作，先点击<code>核心引擎安装升级</code>，然后点击一键更新，等待更新完成</p><ul><li>后面会跳出几个弹窗，ok就好</li></ul><p><img src="/2022/07/22/yakit-%E5%8D%95%E5%85%B5%E4%BD%9C%E6%88%98%E6%AD%A6%E5%99%A8%E5%BA%93/image-20220722170227972.png"></p></li><li><p>已管理员启动</p><p><img src="/2022/07/22/yakit-%E5%8D%95%E5%85%B5%E4%BD%9C%E6%88%98%E6%AD%A6%E5%99%A8%E5%BA%93/image-20220722170458045.png"></p></li><li><p>连接引擎</p><p><img src="/2022/07/22/yakit-%E5%8D%95%E5%85%B5%E4%BD%9C%E6%88%98%E6%AD%A6%E5%99%A8%E5%BA%93/image-20220722170615289.png" alt="image-20220722170615289"></p></li><li><p>连接引擎之后，正式进入工具使用</p><p><img src="/2022/07/22/yakit-%E5%8D%95%E5%85%B5%E4%BD%9C%E6%88%98%E6%AD%A6%E5%99%A8%E5%BA%93/image-20220722170643462.png" alt="image-20220722170643462"></p></li></ul><h2 id="更新插件源"><a href="#更新插件源" class="headerlink" title="更新插件源"></a>更新插件源</h2><h3 id="更新插件源-一-问题已解决"><a href="#更新插件源-一-问题已解决" class="headerlink" title="更新插件源(一)-问题已解决"></a>更新插件源(一)-问题已解决</h3><ul><li><p>看到前面我们的yakit已经安装完成，进入工具使用界面，但是先不要着急体验，我们进入后首先要更新插件源，否则好多功能无法使用</p></li><li><p>但是，使用工具自动更新不成功，或者更新后无法显示</p><ul><li>点击右上角的配置，更新Yakit插件源，官方与第三方<ul><li>官方直接使用GitHub下载，第三方使用了GitHub的加速器下载（但是都不行）</li></ul></li></ul><p><img src="/2022/07/22/yakit-%E5%8D%95%E5%85%B5%E4%BD%9C%E6%88%98%E6%AD%A6%E5%99%A8%E5%BA%93/image-20220722174625148.png"></p><p><img src="/2022/07/22/yakit-%E5%8D%95%E5%85%B5%E4%BD%9C%E6%88%98%E6%AD%A6%E5%99%A8%E5%BA%93/image-20220722174600861.png" alt="image-20220722174600861"></p></li><li><p>各位师傅可以试试，我是没有更新成功，更新后工具中还是没有显示插件，所以只能下载后本地导入</p><ul><li>Yakit 的官方插件<strong>仓库</strong>地址为 <code>https://github.com/yaklang/yakit-store</code></li><li>上图中的官方<strong>POC</strong>源：<code>https://github.com/projectdiscovery/nuclei-templates</code></li></ul></li><li><p>下载对应的源文件，通过本地导入，本地导入时注意一个是仓库，一个POC，分开导入即可</p><p><img src="/2022/07/22/yakit-%E5%8D%95%E5%85%B5%E4%BD%9C%E6%88%98%E6%AD%A6%E5%99%A8%E5%BA%93/image-20220722180608970.png" alt="image-20220722180608970"></p></li><li><p>都写到这里了上面的也就不删除了，前面遇到这个问题搞了好久最终决定用本地加载，本地刚加载完，发现工具有更新，更新之后，以上的问题自己好了，，，好了就好了，我们接着往下操作就是了</p></li></ul><h3 id="更新插件源-二"><a href="#更新插件源-二" class="headerlink" title="更新插件源(二)"></a>更新插件源(二)</h3><ul><li><p>承接上面的操作，使用官方源应为直接使用github所以会慢一点，这里建议直接使用第三方仓库源</p><p><img src="/2022/07/22/yakit-%E5%8D%95%E5%85%B5%E4%BD%9C%E6%88%98%E6%AD%A6%E5%99%A8%E5%BA%93/image-20220722213312332.png"></p></li><li><p>安装完成后就能在插件管理中看到对应的插件</p><ul><li>此处建议在网络良好的情况下，全选插件商店，下载到本地，测试过程中总是出现获取不到的情况<ul><li>下载后可在旁边的<code>本地</code>处看到</li></ul></li></ul><p><img src="/2022/07/22/yakit-%E5%8D%95%E5%85%B5%E4%BD%9C%E6%88%98%E6%AD%A6%E5%99%A8%E5%BA%93/image-20220722213954813.png"></p></li><li><p>此处我们已<code>重置 nuclei Yaml PoC 数据库</code>次插件为例</p><ul><li><p>点击下载，即可添加到插件仓库</p><p><img src="/2022/07/22/yakit-%E5%8D%95%E5%85%B5%E4%BD%9C%E6%88%98%E6%AD%A6%E5%99%A8%E5%BA%93/image-20220722214411843.png"></p></li><li><p>点击<code>启动任务</code>即可完成插件功能</p><ul><li>还没理解透：应该是对POC文件进行加载或者重新加载</li><li>那么其他的插件可自行研究</li></ul><p><img src="/2022/07/22/yakit-%E5%8D%95%E5%85%B5%E4%BD%9C%E6%88%98%E6%AD%A6%E5%99%A8%E5%BA%93/image-20220722214606492.png"></p></li><li><p>如：被动扫描插件，就是在抓包过程中进行被动漏洞探测等</p></li></ul></li></ul><h2 id="手工渗透测试"><a href="#手工渗透测试" class="headerlink" title="手工渗透测试"></a>手工渗透测试</h2><h3 id="MITM模块"><a href="#MITM模块" class="headerlink" title="MITM模块"></a>MITM模块</h3><h4 id="MITM-中间人代理与劫持"><a href="#MITM-中间人代理与劫持" class="headerlink" title="MITM-中间人代理与劫持"></a>MITM-中间人代理与劫持</h4><ul><li><p>这里类似与BurpSuite的拦截功能，实现的方式有所不同，带着这个思路往下走</p><ul><li>这里的插件是灰色，勾选下面的插件自动加载，插件就可选了</li></ul><p><img src="/2022/07/22/yakit-%E5%8D%95%E5%85%B5%E4%BD%9C%E6%88%98%E6%AD%A6%E5%99%A8%E5%BA%93/image-20220722215750130.png"></p></li><li><p>点击劫持启动，浏览器配置对应的拦截IP地址与端口（与BP一致）</p><ul><li>1、拦截到数据包后放行，丢弃，劫持响应（对返回数据包拦截）</li><li>2、已启用就是在上面配置过程中勾选的，全部：可以将所有的验证脚本都勾选上</li><li>3、劫持响应是对所有的数据包进行拦截包括返回的数据包；手动劫持是开始拦截；自动方行是不拦截</li><li>剩余的小点就不再说了如过滤器、匹配标记等</li></ul><p><img src="/2022/07/22/yakit-%E5%8D%95%E5%85%B5%E4%BD%9C%E6%88%98%E6%AD%A6%E5%99%A8%E5%BA%93/image-20220722220310351.png"></p></li><li><p>此处与bp不同的地方，要想查看返回的响应包，就需要点击劫持响应，查看返回包，没有分屏显示</p><ul><li>感觉这个功能不好，没有重放分屏显示，不方便，不知道是不是我没找到</li><li>右键可以发送到Web Fuzzer可以分屏显示不知道与BP是不是一个意思</li></ul></li><li><p>右键菜单，这里先提下，后面说到每个模块的功能的时候补充</p><p><img src="/2022/07/22/yakit-%E5%8D%95%E5%85%B5%E4%BD%9C%E6%88%98%E6%AD%A6%E5%99%A8%E5%BA%93/image-20220722221405473.png"></p></li></ul><h5 id="https证书"><a href="#https证书" class="headerlink" title="https证书"></a>https证书</h5><ul><li><p>这里需要单独说下证书，为了抓取https的数据包没那么就需要安装相关证书，点击后有下载按钮，下载即可</p></li><li><p>下载后将文件后缀改成<code>.crt</code>，右键–安装证书-即可，安装过程不再截图</p><ul><li>之后既可以抓取https的数据包了</li></ul><p><img src="/2022/07/22/yakit-%E5%8D%95%E5%85%B5%E4%BD%9C%E6%88%98%E6%AD%A6%E5%99%A8%E5%BA%93/image-20220723162656970.png"></p></li></ul><h4 id="HTTP-History"><a href="#HTTP-History" class="headerlink" title="HTTP History"></a>HTTP History</h4><ul><li><p>显示历史数据包，点击后显示详情</p><p><img src="/2022/07/22/yakit-%E5%8D%95%E5%85%B5%E4%BD%9C%E6%88%98%E6%AD%A6%E5%99%A8%E5%BA%93/image-20220722223629028.png" alt="image-20220722223629028"></p></li></ul><h4 id="网站树视角"><a href="#网站树视角" class="headerlink" title="网站树视角"></a>网站树视角</h4><ul><li>直观的看到扫描过的网站</li></ul><p><img src="/2022/07/22/yakit-%E5%8D%95%E5%85%B5%E4%BD%9C%E6%88%98%E6%AD%A6%E5%99%A8%E5%BA%93/image-20220722223918043.png"></p><ul><li><p>右键可发送到三个模块</p><ul><li>后面看到者三个模块在详细介绍</li></ul><p><img src="/2022/07/22/yakit-%E5%8D%95%E5%85%B5%E4%BD%9C%E6%88%98%E6%AD%A6%E5%99%A8%E5%BA%93/image-20220722224221232.png"></p></li><li><p>数据包最后的<code>详情</code></p><ul><li>可右键发送到Fuzzer模块，也就是数据包重放模块</li><li>下面还有一部分显示，是对数据包的分解，添加了复制功能</li></ul><p><img src="/2022/07/22/yakit-%E5%8D%95%E5%85%B5%E4%BD%9C%E6%88%98%E6%AD%A6%E5%99%A8%E5%BA%93/image-20220722224441594.png"></p></li><li><p>发送的数据包扫描</p><ul><li>只能选一个，点击开始</li></ul><p><img src="/2022/07/22/yakit-%E5%8D%95%E5%85%B5%E4%BD%9C%E6%88%98%E6%AD%A6%E5%99%A8%E5%BA%93/image-20220722225135291.png"></p><ul><li><p>输出扫描结果，这里可以配合工具操作好理解点</p><p><img src="/2022/07/22/yakit-%E5%8D%95%E5%85%B5%E4%BD%9C%E6%88%98%E6%AD%A6%E5%99%A8%E5%BA%93/image-20220722225221371.png"></p></li></ul></li></ul><h3 id="Web-Fuzzer-重放模块"><a href="#Web-Fuzzer-重放模块" class="headerlink" title="Web Fuzzer-重放模块"></a>Web Fuzzer-重放模块</h3><ul><li>通过测试感觉自己的理解没有问题，Web Fuzzer应该类似于重放功能<ul><li>部分标签功能还没熟悉，先简单说下使用</li></ul></li></ul><p>在前面的操作中右键有标签选项发送到 Fuzzer，就是发送到重放模块，如下图</p><p><img src="/2022/07/22/yakit-%E5%8D%95%E5%85%B5%E4%BD%9C%E6%88%98%E6%AD%A6%E5%99%A8%E5%BA%93/image-20220723163408479.png"></p><ul><li>1、就是将修改好的数据包进行发送，旁边会返回发送的结果数据包</li><li>2、这里有个高级选项，看名字能知道一部分<ul><li>设置代理：配置代理访问内网或者被墙的地址</li><li>HTTPS：发送HTTPS的数据包</li><li>请求HOST：应该是防护绕过的措施</li></ul></li><li>3、此处可以修改数据包后通过1发送出去</li></ul><p>这个模块叫做 Web Fuzzer，那么就存在模糊测试的功能，但此处没没明白模糊测试的是哪些内容</p><ul><li>在数据包发送之后，点击<code>详情</code></li></ul><p><img src="/2022/07/22/yakit-%E5%8D%95%E5%85%B5%E4%BD%9C%E6%88%98%E6%AD%A6%E5%99%A8%E5%BA%93/image-20220723164043607.png"></p><p><img src="/2022/07/22/yakit-%E5%8D%95%E5%85%B5%E4%BD%9C%E6%88%98%E6%AD%A6%E5%99%A8%E5%BA%93/image-20220723164127853.png"></p><ul><li><p>以上图片作为对比，这里点击模糊测试，数据包会发生变化，重新提交数据包</p><ul><li>这里能力有限，这个模糊测试的功能还是没有太明白是什么意思</li></ul><p><img src="/2022/07/22/yakit-%E5%8D%95%E5%85%B5%E4%BD%9C%E6%88%98%E6%AD%A6%E5%99%A8%E5%BA%93/image-20220723164257481.png"></p></li></ul><p><strong>那这个重放模块就到这里，后面看到具体功能点再做补充</strong></p><h2 id="基础安全工具"><a href="#基础安全工具" class="headerlink" title="基础安全工具"></a>基础安全工具</h2><ul><li>这个模块工具主要是一些基础的安全工具的集成</li></ul><h3 id="爆破与未授权"><a href="#爆破与未授权" class="headerlink" title="爆破与未授权"></a>爆破与未授权</h3><ul><li>看图说话，看到内容就知道，主要是进行认证的爆破，爆破的类型目前就这几种，工具还在更新不知道作者的这个模块会不会更新<ul><li>支持批量扫描，需要上传txt文件</li></ul></li></ul><p><img src="/2022/07/22/yakit-%E5%8D%95%E5%85%B5%E4%BD%9C%E6%88%98%E6%AD%A6%E5%99%A8%E5%BA%93/image-20220723165906732.png"></p><ul><li><p>爆破最重要的是字典，不添加就使用默认字典，通过<code>更多参数</code>添加</p><ul><li><p>操作简单看图添加即可</p><p><img src="/2022/07/22/yakit-%E5%8D%95%E5%85%B5%E4%BD%9C%E6%88%98%E6%AD%A6%E5%99%A8%E5%BA%93/image-20220723165958944.png"></p></li></ul></li></ul><h3 id="基础爬虫"><a href="#基础爬虫" class="headerlink" title="基础爬虫"></a>基础爬虫</h3><ul><li><p>输入需要爬取的目标，开始执行</p><ul><li>2处是该模块的代码，懂代码的师傅可以看看，自己就不班门弄斧了</li><li>3处有点小问题，扫描记过可能会显示不全</li></ul><p><img src="/2022/07/22/yakit-%E5%8D%95%E5%85%B5%E4%BD%9C%E6%88%98%E6%AD%A6%E5%99%A8%E5%BA%93/image-20220723170453273.png"></p></li><li><p>后面还有一个模块：基础爬虫[local]，自己没卡出来什么不一样，这里就不说了</p></li></ul><h3 id="空间引擎"><a href="#空间引擎" class="headerlink" title="空间引擎"></a>空间引擎</h3><ul><li>这里使用了奇安信的鹰图搜索，写上你的key，开始查询</li></ul><p><img src="/2022/07/22/yakit-%E5%8D%95%E5%85%B5%E4%BD%9C%E6%88%98%E6%AD%A6%E5%99%A8%E5%BA%93/image-20220723172018976.png"></p><h3 id="子域名收集"><a href="#子域名收集" class="headerlink" title="子域名收集"></a>子域名收集</h3><ul><li><p>输入顶级域名，开始进行子域名查找，还可以查找C端</p><p><img src="/2022/07/22/yakit-%E5%8D%95%E5%85%B5%E4%BD%9C%E6%88%98%E6%AD%A6%E5%99%A8%E5%BA%93/image-20220723173002613.png"></p></li></ul><h3 id="综合目录扫描"><a href="#综合目录扫描" class="headerlink" title="综合目录扫描"></a>综合目录扫描</h3><ul><li><p>主要是进行目录扫描，类似御剑等工具，关键还是字典</p><ul><li>添加默认自带的字典文件进行扫描</li></ul><p><img src="/2022/07/22/yakit-%E5%8D%95%E5%85%B5%E4%BD%9C%E6%88%98%E6%AD%A6%E5%99%A8%E5%BA%93/image-20220723173822109.png"></p><ul><li><p>通过额外参数添加自定义的字典文件或文件夹</p><p><img src="/2022/07/22/yakit-%E5%8D%95%E5%85%B5%E4%BD%9C%E6%88%98%E6%AD%A6%E5%99%A8%E5%BA%93/image-20220723173909878.png"></p></li></ul></li></ul><h2 id="专项漏洞检测"><a href="#专项漏洞检测" class="headerlink" title="专项漏洞检测"></a>专项漏洞检测</h2><ul><li><p>通过最开始插件商店更新相关漏洞插件，这里可选择对应的漏洞进行检查，并显示检查结果</p><ul><li><p>POC也可以自己写，有相关的说明与插件编写方法</p></li><li><p>支持批量扫描，通过额外配置上传文件</p><p><img src="/2022/07/22/yakit-%E5%8D%95%E5%85%B5%E4%BD%9C%E6%88%98%E6%AD%A6%E5%99%A8%E5%BA%93/image-20220723174350678.png"></p></li></ul></li></ul><h2 id="payload管理"><a href="#payload管理" class="headerlink" title="payload管理"></a>payload管理</h2><ul><li><p>通过此处可以上传字典，包括用户名与密码</p><ul><li>相关的按钮就是新增与上传字典，很简单</li><li>此处出现了 Fuzz 模块的渲染，前面说自己不太懂的地方，等用到学会了再补充</li></ul><p><img src="/2022/07/22/yakit-%E5%8D%95%E5%85%B5%E4%BD%9C%E6%88%98%E6%AD%A6%E5%99%A8%E5%BA%93/image-20220723174828241.png"></p></li></ul><h2 id="Yak-Runner"><a href="#Yak-Runner" class="headerlink" title="Yak Runner"></a>Yak Runner</h2><ul><li><p>这里应该是作者留下的用来测试yak代码的地方，通过运行按钮可以看到自己脚本输出成果</p><p><img src="/2022/07/22/yakit-%E5%8D%95%E5%85%B5%E4%BD%9C%E6%88%98%E6%AD%A6%E5%99%A8%E5%BA%93/image-20220723175247959.png"></p></li></ul><h2 id="反连管理"><a href="#反连管理" class="headerlink" title="反连管理"></a>反连管理</h2><ul><li>这个模块主要提供了：端口监听、反连服务器、DNSLog、ICMP-SizeLog、TCP-PortLog 五个功能。</li><li>这里还没测试与使用过，暂时先不写<ul><li>根据给出的模块功能，应该是内网穿透，数据包回传与监听的功能</li></ul></li></ul><h2 id="数据处理（小工具）"><a href="#数据处理（小工具）" class="headerlink" title="数据处理（小工具）"></a>数据处理（小工具）</h2><ul><li><p>数据对比，将数据输入对比出不同的地方</p><ul><li>以下是百度百科，随便粘贴的</li></ul><p><img src="/2022/07/22/yakit-%E5%8D%95%E5%85%B5%E4%BD%9C%E6%88%98%E6%AD%A6%E5%99%A8%E5%BA%93/image-20220723181101591.png"></p></li><li><p>codec，对常见的加密方式的汇总，包括国密算法</p><p><img src="/2022/07/22/yakit-%E5%8D%95%E5%85%B5%E4%BD%9C%E6%88%98%E6%AD%A6%E5%99%A8%E5%BA%93/image-20220723181259764.png"></p></li></ul><h2 id="数据库"><a href="#数据库" class="headerlink" title="数据库"></a>数据库</h2><ul><li>最后的模块数据库，是对真个操作过程的记录，包括扫描结果的漏洞详情、端口资产、子域名资产、HTTP数据包历史记录等，支持表格导出</li><li>就这样了，后面学会了再进行补充</li></ul>]]></content>
      
      
      <categories>
          
          <category> 器 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 信息收集自动化工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>水泽-信息收集自动化工具</title>
      <link href="/2022/07/21/%E6%B0%B4%E6%B3%BD-%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86%E8%87%AA%E5%8A%A8%E5%8C%96%E5%B7%A5%E5%85%B7/"/>
      <url>/2022/07/21/%E6%B0%B4%E6%B3%BD-%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86%E8%87%AA%E5%8A%A8%E5%8C%96%E5%B7%A5%E5%85%B7/</url>
      
        <content type="html"><![CDATA[<ul><li>我们都是站在巨人的肩膀，所以最开头先写参考链接地址：<a href="https://github.com/0x727/ShuiZe_0x727">https://github.com/0x727/ShuiZe_0x727</a></li></ul><h2 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h2><ul><li><p>工具下载，下载地址：<a href="https://github.com/0x727/ShuiZe_0x727">https://github.com/0x727/ShuiZe_0x727</a></p></li><li><p>环境准备，根据下载时提供的安装要求</p><ul><li><p>操作系统：ubuntu 20.04.2，提前给ubuntu换好源，我这里用的是阿里源</p><p><img src="/2022/07/21/%E6%B0%B4%E6%B3%BD-%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86%E8%87%AA%E5%8A%A8%E5%8C%96%E5%B7%A5%E5%85%B7/image-20220721212239481.png"></p></li><li><p>python环境：python3.8</p><p><img src="/2022/07/21/%E6%B0%B4%E6%B3%BD-%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86%E8%87%AA%E5%8A%A8%E5%8C%96%E5%B7%A5%E5%85%B7/image-20220721212322352.png"></p></li></ul></li></ul><h2 id="开始安装"><a href="#开始安装" class="headerlink" title="开始安装"></a>开始安装</h2><p>使用以下命令</p><pre class="line-numbers language-none"><code class="language-none">chmod 777 build.sh.&#x2F;build.sh   &#x2F;&#x2F;命令执行后就是等待安装完成<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><ul><li><p>使用以上命令进行安装，看了好多师傅的安装教程，先说一句：可能会报错。刚开始安装挺顺利感觉应该没问题，但是到最后还是报错了，那我们就解决这个错误</p><p><img src="/2022/07/21/%E6%B0%B4%E6%B3%BD-%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86%E8%87%AA%E5%8A%A8%E5%8C%96%E5%B7%A5%E5%85%B7/image-20220721212448922.png"></p></li></ul><pre class="line-numbers language-none"><code class="language-none">ERROR: pip&#39;s dependency resolver does not currently take into account all the packages that are installed. This behaviour is the source of the following dependency conflicts.launchpadlib 1.10.13 requires testresources, which is not installed.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>大概意思就是说：有个 testresources 的依赖包没有安装，那么我们手动进行安装，这里使用清华源</p><pre class="line-numbers language-none"><code class="language-none">ip3 install -i https:&#x2F;&#x2F;pypi.tuna.tsinghua.edu.cn&#x2F;simple testresources<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后直接运行水泽即可，显示安装完成</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">python3 ShuiZe<span class="token punctuation">.</span>py  <span class="token operator">-</span>h<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2022/07/21/%E6%B0%B4%E6%B3%BD-%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86%E8%87%AA%E5%8A%A8%E5%8C%96%E5%B7%A5%E5%85%B7/image-20220721213407314.png"></p><p><strong>安装完成，下面我们开始使用水泽，先看参数，再看文件配置</strong></p><h2 id="水泽参数详解"><a href="#水泽参数详解" class="headerlink" title="水泽参数详解"></a>水泽参数详解</h2><pre class="line-numbers language-none"><code class="language-none">Options:  -h, --help            show this help message and exit  -d DOMAIN, --domain&#x3D;DOMAIN  备案反查顶级域名：-d baidu.com(顶级域名)  -c CSUBNET, --cSubnet&#x3D;CSUBNET                查C端：-c 192.169.1.0,192.168.2.0 或 -c 在过程中获取C端进行扫描  -n ISINTRANET, --intranet&#x3D;ISINTRANET                扫描内网时设置成1  -p PROXY, --proxy&#x3D;PROXY                配置内网代理 socks5 socks4（扫描内网时添加代理使用）  -f FILE, --file&#x3D;FILE  &#x2F;result&#x2F;2ddcaa3ebbd0&#x2F;172.18.82.0.xlsx  检测文件中域名漏洞：-f url.txt（上面给的没看懂）  -w WEAK, --weak&#x3D;WEAK  加载密码脚本  未测试，这里的密码脚本不知道指的是不是字典  -v VPN, --vpn&#x3D;VPN     Run in the case of vpn（未测试）  --web&#x3D;WEB             扫描内网网页  --mn&#x3D;MASNMAPFILE      将masscan与nmap 扫描的结果带入扫描（自己的理解）  --fofaTitle&#x3D;FOFATITLE                        从fofa里收集title的资产，然后漏洞检测:--fofaTitle 牛津大学  --domainFile&#x3D;DOMAINFILE                        批量跑根域名列表：--domainFile domain.txt  --ksubdomain&#x3D;KSUBDOMAIN                        不调用ksubdomain爆破子域名  --test&#x3D;TESTDEMO       演示测试扫描(扫描示例)：如果 test&#x3D;1 运行测试演示  --justInfoGather&#x3D;JUSTINFOGATHER                        仅信息收集，不检测漏洞：--justInfoGather 1  --getSocks&#x3D;GETSOCKS   get socks（没懂）<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>参数使用样例</li></ul><pre class="line-numbers language-python" data-language="python"><code class="language-python">python3 ShuiZe<span class="token punctuation">.</span>py <span class="token operator">-</span>d domain<span class="token punctuation">.</span>compython3 ShuiZe<span class="token punctuation">.</span>py <span class="token operator">-</span>d domain<span class="token punctuation">.</span>com <span class="token operator">-</span><span class="token operator">-</span>justInfoGather <span class="token number">1</span>python3 ShuiZe<span class="token punctuation">.</span>py <span class="token operator">-</span>d domain<span class="token punctuation">.</span>com <span class="token operator">-</span><span class="token operator">-</span>ksubdomain <span class="token number">0</span>python3 ShuiZe<span class="token punctuation">.</span>py <span class="token operator">-</span>c <span class="token number">192.168</span><span class="token number">.1</span><span class="token number">.0</span><span class="token punctuation">,</span><span class="token number">192.168</span><span class="token number">.2</span><span class="token number">.0</span><span class="token punctuation">,</span><span class="token number">192.168</span><span class="token number">.3</span><span class="token number">.0</span>python3 ShuiZe<span class="token punctuation">.</span>py <span class="token operator">-</span>f url<span class="token punctuation">.</span>txtpython3 ShuiZe<span class="token punctuation">.</span>py <span class="token operator">-</span>n <span class="token number">1</span> <span class="token operator">-</span>c <span class="token number">192.168</span><span class="token number">.1</span><span class="token number">.0</span><span class="token punctuation">,</span><span class="token number">192.168</span><span class="token number">.2</span><span class="token number">.0</span> <span class="token operator">-</span>p <span class="token number">1.1</span><span class="token number">.1</span><span class="token number">.1</span><span class="token punctuation">:</span><span class="token number">1111</span>python3 ShuiZe<span class="token punctuation">.</span>py <span class="token operator">-</span>n <span class="token number">1</span> <span class="token operator">-</span>f url<span class="token punctuation">.</span>txt <span class="token operator">-</span>p <span class="token number">1.1</span><span class="token number">.1</span><span class="token number">.1</span><span class="token punctuation">:</span><span class="token number">1111</span> <span class="token operator">-</span><span class="token operator">-</span>web <span class="token number">1</span>python3 ShuiZe<span class="token punctuation">.</span>py <span class="token operator">-</span>n <span class="token number">1</span> <span class="token operator">-</span>c <span class="token number">192.168</span><span class="token number">.1</span><span class="token number">.0</span><span class="token punctuation">,</span><span class="token number">192.168</span><span class="token number">.2</span><span class="token number">.0</span> <span class="token operator">-</span>v <span class="token number">1</span>proxychains4 python3 ShuiZe<span class="token punctuation">.</span>py <span class="token operator">-</span>n <span class="token number">1</span> <span class="token operator">-</span>f <span class="token operator">/</span>result<span class="token operator">/</span>2ddcaa3ebbd0<span class="token operator">/</span><span class="token number">172.18</span><span class="token number">.82</span><span class="token number">.0</span><span class="token punctuation">.</span>xlsxproxychains4 python3 ShuiZe<span class="token punctuation">.</span>py <span class="token operator">-</span>n <span class="token number">1</span> <span class="token operator">-</span>w <span class="token number">1</span> <span class="token operator">-</span>f <span class="token operator">/</span>result<span class="token operator">/</span>2ddcaa3ebbd0<span class="token operator">/</span><span class="token number">172.18</span><span class="token number">.82</span><span class="token number">.0</span><span class="token punctuation">.</span>xlsxpython3 ShuiZe<span class="token punctuation">.</span>py <span class="token operator">-</span><span class="token operator">-</span>mn masNmap<span class="token punctuation">.</span>xlsxpython3 ShuiZe<span class="token punctuation">.</span>py <span class="token operator">-</span><span class="token operator">-</span>mn masNmap<span class="token punctuation">.</span>xlsx <span class="token operator">-</span>w <span class="token number">1</span>python3 ShuiZe<span class="token punctuation">.</span>py <span class="token operator">-</span><span class="token operator">-</span>fofaTitle 大学python3 ShuiZe<span class="token punctuation">.</span>py <span class="token operator">-</span><span class="token operator">-</span>domainFile domain<span class="token punctuation">.</span>txt<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>如果时间足够，并且外部打点，建议直接使用 -d 参数，一路到底，可最大程度收集到有用信息</strong></p><h3 id="d：备案反查顶级域名"><a href="#d：备案反查顶级域名" class="headerlink" title="-d：备案反查顶级域名"></a>-d：备案反查顶级域名</h3><p>该参数功能（显示信息比较多，这里简单列出个人感觉比较重要的功能）</p><ul><li><p>获取网站的备案信息，并获取改网站所在公司的所有子公司</p><ul><li>攻防可通过其他子公司打入</li></ul></li><li><p>获取网站所有公司以及子公司的备案信息，包括：电话、邮箱等</p><ul><li><p>可社工利用</p><p><img src="/2022/07/21/%E6%B0%B4%E6%B3%BD-%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86%E8%87%AA%E5%8A%A8%E5%8C%96%E5%B7%A5%E5%85%B7/image-20220721215539815.png"></p></li></ul></li><li><p>不是泛解析，调用ksubdomain爆破子域名，并获取子域名的IP地址</p><p><img src="/2022/07/21/%E6%B0%B4%E6%B3%BD-%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86%E8%87%AA%E5%8A%A8%E5%8C%96%E5%B7%A5%E5%85%B7/image-20220721215921082.png"></p></li><li><p>theHarvest获取邮箱：这个本次测试没看到</p></li><li><p>通过第三方数据接口—获取子域名</p><p><img src="/2022/07/21/%E6%B0%B4%E6%B3%BD-%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86%E8%87%AA%E5%8A%A8%E5%8C%96%E5%B7%A5%E5%85%B7/image-20220721223124415.png"></p></li><li><p>通过github–获取子域名，将结果导入到 txt 文件中，路径会在扫描结束后显示</p><ul><li>这里需要添加 github 的key</li></ul><p><img src="/2022/07/21/%E6%B0%B4%E6%B3%BD-%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86%E8%87%AA%E5%8A%A8%E5%8C%96%E5%B7%A5%E5%85%B7/image-20220721223251921.png"></p></li><li><p>调用百度与必应的搜索语法，爬取网站链接：子域名、后台等</p><ul><li>这里简单看了下，感觉使用了搜索引擎的语法（不知道对不对）</li></ul><p><img src="/2022/07/21/%E6%B0%B4%E6%B3%BD-%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86%E8%87%AA%E5%8A%A8%E5%8C%96%E5%B7%A5%E5%85%B7/image-20220721222704546.png"></p></li><li><p>显示证书</p><p><img src="/2022/07/21/%E6%B0%B4%E6%B3%BD-%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86%E8%87%AA%E5%8A%A8%E5%8C%96%E5%B7%A5%E5%85%B7/image-20220721223621010.png"></p></li><li><p>子域名友链</p><p><img src="/2022/07/21/%E6%B0%B4%E6%B3%BD-%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86%E8%87%AA%E5%8A%A8%E5%8C%96%E5%B7%A5%E5%85%B7/image-20220721223851233.png"></p></li><li><p>以下四个放到一起理解：解析子域名A记录,检测是否CDN和整理C段的IP</p><ul><li><p>解析子域名A记录，检测是否CDN</p><ul><li>CDN：理解为网站的本地缓存，访问的IP并不是真正服务器的IP地址，而是缓存服务器的IP地址，目的是为了加快访问速度</li></ul><p><img src="/2022/07/21/%E6%B0%B4%E6%B3%BD-%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86%E8%87%AA%E5%8A%A8%E5%8C%96%E5%B7%A5%E5%85%B7/image-20220721224454751.png"></p></li><li><p>这个理C端IP地址</p><p><img src="/2022/07/21/%E6%B0%B4%E6%B3%BD-%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86%E8%87%AA%E5%8A%A8%E5%8C%96%E5%B7%A5%E5%85%B7/image-20220721224815433.png"></p></li></ul></li><li><p>资产测绘平台：fofa，shodan，quake，qianxin</p><ul><li>需要添加对应的key</li></ul><p><img src="/2022/07/21/%E6%B0%B4%E6%B3%BD-%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86%E8%87%AA%E5%8A%A8%E5%8C%96%E5%B7%A5%E5%85%B7/image-20220721225043727.png"></p></li><li><p>IP反查域名</p><ul><li>使用网站：<a href="https://webscan.cc/">https://webscan.cc/</a></li></ul><p><img src="/2022/07/21/%E6%B0%B4%E6%B3%BD-%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86%E8%87%AA%E5%8A%A8%E5%8C%96%E5%B7%A5%E5%85%B7/image-20220721225559396.png"></p></li><li><p>探测扫描到的IP地址与URL存活</p><p><img src="/2022/07/21/%E6%B0%B4%E6%B3%BD-%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86%E8%87%AA%E5%8A%A8%E5%8C%96%E5%B7%A5%E5%85%B7/image-20220721225733917.png"></p></li><li><p>漏洞检测，web漏洞、cms漏洞等</p><p><img src="/2022/07/21/%E6%B0%B4%E6%B3%BD-%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86%E8%87%AA%E5%8A%A8%E5%8C%96%E5%B7%A5%E5%85%B7/image-20220721230114752.png"></p></li><li><p>最终结果保存在表格与txt文件中</p><ul><li>这个就比较明确不再赘述，表格中写的很清楚</li></ul></li></ul><h2 id="POC编写"><a href="#POC编写" class="headerlink" title="POC编写"></a>POC编写</h2><p>水泽中有漏洞验证模块，使用水泽自己的POC模板编写POC进行添加</p><pre class="line-numbers language-none"><code class="language-none">POC的模板文件例子：Plugins&#x2F;Vul&#x2F;Web&#x2F;__template__.py只需要在run_detect方法里调用POC的利用方法即可<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="API配置"><a href="#API配置" class="headerlink" title="API配置"></a>API配置</h2><p>配置文件地址：<code>iniFile/config.ini</code></p><p>方法简单不再赘述，打开照着配置即可</p>]]></content>
      
      
      <categories>
          
          <category> 器 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 信息收集自动化工具 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
